(()=>{"use strict";var e={212:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(15),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/meyerreset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const s=i},426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(15),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,":root {\n  --background-light-blue: rgb(245, 246, 247);\n  --gray-0: #323335;\n  --gray-1: #505153;\n  --gray-2: #93959b;\n  --gray-3: #93959b;\n  --gray-4: #aaaeb8;\n  --gray-5: #c3c5c7;\n  --gray-6: #dbdee0;\n  --gray-7: #e8ebec;\n  --gray-8: #f5f6f7;\n  --red-1: rgb(248, 77, 105);\n  --brown-1: rgb(184, 152, 105);\n  --orange-1: rgb(247, 168, 22);\n  --yellow-1: rgb(248, 196, 25);\n  --yellow-2: rgb(253, 251, 244);\n  --lime-1: rgb(115, 224, 88);\n  --forest-1: rgb(56, 170, 117);\n  --blue-1: rgb(59, 118, 228);\n\n  --sidebar-width: 15rem;\n}\nhtml {\n  font-size: 16px;\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n}\n/* .app-header {\n  background-color: #ddd;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 4em;\n  width: 100%;\n} */\n.app-container {\n  display: grid;\n  grid-template-columns: var(--sidebar-width) 1fr;\n  height: 100vh;\n}\n/* Adds a shadow behind the main area */\n/* .app-container::after {\n  z-index: 100;\n  position: fixed;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  width: calc(100vw - var(--sidebar-width));\n  background-color: rgba(255,255,255,0);\n  box-shadow: 0 0 16px rgba(80,80,80,0.08);\n  content: \"\";\n  pointer-events: none;\n} */\n.app-sidebar {\n  font-size: 0.93rem;\n  /* background-color: var(--background-light-blue); */\n  background-color: var(--gray-8);\n  height: calc(100% - 2.6rem);\n  width: var(--sidebar-width);\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  display: inline-block;\n  overflow: auto;\n}\n.app-lists {\n  margin: 2rem 1.2rem;\n}\n.sidebar-list {\n  color: var(--gray-1);\n  line-height: 1.2em;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  /* width: 100%; */\n  padding: 0.45rem 0.4rem;\n  margin-bottom: 0.1rem;\n  border-radius: 5px;\n  transition: background-color 0.2s;\n  cursor: pointer;\n}\n.sidebar-list:hover {\n  background-color: var(--gray-7);\n}\n.sidebar-list-selected {\n  background-color: var(--gray-6);\n}\n.sidebar-list-selected:hover {\n  background-color: var(--gray-6);\n}\n.sidebar-list-left {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.sidebar-list-right {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n}\n.sidebar-list-icon {\n  text-align: center;\n  font-size: 1em;\n  width: 1.6rem;\n  position: relative;\n  top: 0.05em;\n  right: 0.2em;\n}\n.fa-inbox {\n  color: var(--blue-1);\n  font-size: 0.9em;\n}\n.fa-star {\n  color: var(--yellow-1);\n}\n.fa-calendar-alt {\n  color: var(--red-1);\n}\n.main-footer-buttons .fa-calendar-alt {\n  color: var(--gray-5);\n}\n.fa-layer-group {\n  color: var(--gray-4);\n}\n.anytime {\n  color: var(--forest-1);\n}\n.fa-archive {\n  color: var(--brown-1);\n}\n.fa-book {\n  color: var(--lime-1);\n}\n.fa-trash {\n  color: var(--gray-2);\n}\n.fa-border-all {\n  color: var(--gray-2);\n}\n.fa-arrow-right {\n  color: var(--gray-5);\n}\n.fa-search {\n  color: var(--gray-2);\n}\n.sidebar-list-progress {\n  margin-left: 0.18em;\n  margin-right: 0.45em;\n  width: 1em;\n  height: 1em;\n  border: 2px solid var(--gray-2);\n  border-radius: 100%;\n  box-sizing: border-box;\n  position: relative;\n  top: 0.07em;\n}\n.qty {\n  \n}\n.qty-alert {\n  color: white;\n  background-color: var(--red-1);\n  font-size: 0.88em;\n  padding: 0.13em 0.5em 0.15em 0.5em;\n  border-radius: 100px;\n  margin-right: 0.5em;\n  position: relative;\n  bottom: 0.13em;\n}\n.bold {\n  font-weight: bold;\n}\n.divider-sm {\n  width: 100%;\n  height: 0.8em;\n}\n.divider-md {\n  width: 100%;\n  height: 1.4em;\n}\n.divider-lg {\n  width: 100%;\n  height: 2em;\n}\n.app-sidebar-footer {\n  display: flex;\n  flex-direction: row;\n  color: var(--gray-1);\n  background-color: var(--background-light-blue);\n  border-top: 1px solid var(--gray-6);\n  box-sizing: border-box;\n  width: var(--sidebar-width);\n  padding: 0.9rem 1.5rem;\n  position: fixed;\n  bottom: 0;\n  cursor: pointer;\n  transition: color 0.15s;\n}\n.fa-plus {\n  color: var(--gray-2);\n  transition: color 0.15s;\n}\n.app-sidebar-footer:hover {\n  color: var(--blue-1);\n}\n.app-sidebar-footer:hover .fa-plus{\n  color: var(--blue-1);\n}\n.app-main-footer {\n  font-size: 0.93rem;\n  color: var(--gray-1);\n  background-color: white;\n  border-top: 1px solid var(--gray-6);\n  border-left: 1px solid var(--gray-6);\n  box-sizing: border-box;\n  padding: 0 1.5rem;\n  width: calc(100% - var(--sidebar-width));\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  /* box-shadow: 0 0 12px rgba(80,80,80,0.1); */\n}\n.main-footer-buttons {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  max-width: 20em;\n  margin: 0 auto;\n}\n.main-footer-button {\n  cursor: pointer;\n  transition: color 0.15s;\n  padding: 0.9rem 1.5rem;\n}\n.main-footer-button:hover {\n  color: var(--blue-1);\n}\n.app-main {\n  color: var(--gray-1);\n  background-color: white;\n  height: calc(100% - 2.6rem);\n  border-left: 1px solid var(--gray-6);\n  /* box-shadow: 0 0 12px rgba(80,80,80,0.1); */\n  box-sizing: border-box;\n  display: inline-block;\n  overflow: auto;\n}\n.list-content {\n  /* border: 1px solid var(--gray-5); */\n  box-sizing: border-box;\n  margin: 4.6rem 4rem;\n  max-width: 75ch;\n  min-width: 30ch;\n}\n.list-content-header {\n  font-size: 1em;\n  margin-bottom: 2em;\n}\n.list-title-progress {\n  margin-right: 0.5em;\n  width: 1.6em;\n  height: 1.6em;\n  border: 3px solid var(--blue-1);\n  border-radius: 100%;\n  box-sizing: border-box;\n  display: inline-block;\n  position: relative;\n  top: 0.2em;\n}\n.list-title {\n  color: var(--gray-1);\n  font-weight: bold;\n  font-size: 1.8em;\n  margin-bottom: 0.6rem;\n  display: inline-block;\n}\n.list-description {\n  font-size: 1.05em;\n}\n.list-filters {\n  font-size: 0.98em;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin: 2.2em 0 2.8em 0;;\n}\n.list-filter {\n  color: var(--gray-3);\n  margin-right: 0.1em;\n  padding: 0.3em 0.7em 0.2em 0.7em;\n  border-radius: 100px;\n  transition: color 0.15s, background-color 0.2s;\n  cursor: pointer;\n}\n.list-filter:hover {\n  background-color: var(--gray-7);\n}\n.list-filter-selected {\n  color: white;\n  margin-right: 0.5em;\n  background-color: var(--gray-5);\n}\n.list-content-main {\nfont-size: 0.98em;\n}\n.section-header {\n  width: 100%;\n  padding-bottom: 0.6em;\n  /* background-color: var(--gray-8); */\n  /* margin-bottom: 0.6em; */\n  /* border-bottom: 1px solid var(--gray-5); */\n}\n.section-header h2 {\n  font-size: 1.05em;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.13em;\n  color: var(--gray-1);\n}\n.list-items {\n}\n.list-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.4em 0;\n  margin-bottom: 0.1em;\n  cursor: pointer;\n  transition: color 0.2s;\n  /* position: relative; */\n}\n.list-item:hover {\n  color: var(--gray-3);\n}\n.list-item-completed div {\n  text-decoration: line-through;\n  color: var(--gray-5);\n}\n.list-item-completed .list-item-box {\n  background-color: var(--gray-6);\n}\n.list-item-box {\n  margin-right: 0.7em;\n  width: 1em;\n  height: 1em;\n  border: 1px solid var(--gray-4);\n  border-radius: 100px;\n  display: inline-block;\n  position: relative;\n  /* top: 0.25em; */\n}\n.list-item-label {\n  color: var(--gray-4);\n  margin-left: 0.5em;\n  margin-top: -0.5em;\n  margin-bottom: -0.5em;\n  padding: 0.2em 0.6em 0.2em 0.7em;\n  border-radius: 100px;\n  border: 1px solid var(--gray-4);\n  font-size: 0.75em;\n  display: inline-block;\n  position: relative;\n  bottom: 0.05em;\n}\n.item-name {\n  display: inline-block;\n}\n.item-details {\n  padding-top: 0.3em;\n  display: flex;\n  flex-direction: row;\n  font-size: 0.84em;\n}\n.item-details div {\n  margin-right: 0.8em;\n}\n.item-due-date {\n  font-weight: 600;\n  color: var(--blue-1);\n}\n.item-duration {\n  font-weight: 500;\n  color: var(--blue-1);\n}\n.item-notes {\n  font-weight: 600;\n  color: var(--orange-1);\n}\n.item-priority {\n  font-weight: 600;\n}\n.priority-1 {\n  color: var(--red-1);\n}\n.priority-2 {\n  color: var(--orange-1);\n}\n.priority-3 {\n  color: var(--forest-1);\n}\n.notes-pop-up {\n  font-size: 0.9em;\n  background-color: white;\n  max-width: 30ch;\n  line-height: 1.3em;\n  color: var(--gray-1);\n  position: absolute;\n  padding: 0.7em 1em;\n  border: 1px solid var(--gray-4);\n  border-radius: 0.3em;\n  animation-duration: 0.3s;\n  animation-name: slideup;\n  pointer-events: none;\n}\n.notes-pop-up-leave {\n  animation-duration: 0.3s;\n  animation-name: slideup-reverse;\n}\n@keyframes slideup {\n  from {\n    opacity: 0;\n    transform: translateY(-0.4em);\n  }\n  to {\n    opacity: 100%;\n    transform: translateY(0);\n  }\n}\n@keyframes slideup-reverse {\n  from {\n    opacity: 100%;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(-0.4em);\n  }\n}\n.add-dialog {\n  width: 80%;\n  padding: 1em;\n  border: 1px solid var(--gray-6);\n  border-radius: 0.5em;\n  margin-top: 0.75em;\n}\n.a-d-name {\n  font-size: 1em;\n  font-weight: 600;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 2px;\n}\n.a-d-notes {\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n  box-sizing: border-box;\n  width: 100%;\n  height: 4.4em;\n}\n.a-d-footer {\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 31% 22.5% 22.5% 22.5%;\n  column-gap: 0.5%;\n}\n.a-d-date {\n  /* box-sizing: border-box; */\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n}\n.a-d-list {\n  /* box-sizing: border-box; */\n}\n.a-d-priority {\n  /* box-sizing: border-box; */\n}\n.a-d-duration {\n  /* box-sizing: border-box; */\n}\n.add-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0.1em 0 1em;\n}\n.change-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0.1em 0 1em;\n}\n.cancel-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0 0 0.1em;\n}\n.context-menu {\n  font-size: 0.94em;\n  width: 7em;\n  color: var(--gray-8);\n  position: absolute;\n  cursor: pointer;\n}\n.context-menu div {\n  background-color: var(--gray-0);\n  padding: 0.75em 0.75em;\n  transition: background-color 0.2s;\n}\n.context-menu div:hover {\n  background-color: var(--blue-1);\n}\n.list-modal {\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.list-modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  min-width: 25%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.list-modal button {\n  padding: 0.3em 0.8em;\n  margin-top: 0.5em;\n  margin-right: 0.3em;\n}\n.list-modal-prompt {\n  font-size: 1.06em;\n  margin-bottom: 0.5em;\n}\n.list-modal-name {\n  font-size: 0.95em;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 0.3em;\n}\n.list-modal-description {\n  font-size: 0.95em;\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n  box-sizing: border-box;\n  width: 100%;\n  height: 3.3em;\n  margin-bottom: 0.3em;\n  resize: vertical;\n}\n.hidden {\n  display: none;\n}\ninput {\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  padding-bottom: 0.2rem;\n  outline: none;\n}\ninput:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\ntextarea {\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  outline: none;\n  resize: vertical;\n  min-height: 2em;\n}\ntextarea:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\nselect {\n  background-color: white;\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  padding-bottom: 0.2rem;\n  outline: none;\n}\nselect:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\ninput[type=\"date\"] {\n\n}\np {\n  line-height: 1.4em;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,2CAA2C;EAC3C,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,0BAA0B;EAC1B,6BAA6B;EAC7B,6BAA6B;EAC7B,6BAA6B;EAC7B,8BAA8B;EAC9B,2BAA2B;EAC3B,6BAA6B;EAC7B,2BAA2B;;EAE3B,sBAAsB;AACxB;AACA;EACE,eAAe;EACf,gEAAgE;AAClE;AACA;;;;;;;GAOG;AACH;EACE,aAAa;EACb,+CAA+C;EAC/C,aAAa;AACf;AACA,uCAAuC;AACvC;;;;;;;;;;;GAWG;AACH;EACE,kBAAkB;EAClB,oDAAoD;EACpD,+BAA+B;EAC/B,2BAA2B;EAC3B,2BAA2B;EAC3B;;mCAEiC;EACjC,qBAAqB;EACrB,cAAc;AAChB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,iBAAiB;EACjB,uBAAuB;EACvB,qBAAqB;EACrB,kBAAkB;EAClB,iCAAiC;EACjC,eAAe;AACjB;AACA;EACE,+BAA+B;AACjC;AACA;EACE,+BAA+B;AACjC;AACA;EACE,+BAA+B;AACjC;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;AAC7B;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,oBAAoB;EACpB,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;EACnB,oBAAoB;EACpB,UAAU;EACV,WAAW;EACX,+BAA+B;EAC/B,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;EAClB,WAAW;AACb;AACA;;AAEA;AACA;EACE,YAAY;EACZ,8BAA8B;EAC9B,iBAAiB;EACjB,kCAAkC;EAClC,oBAAoB;EACpB,mBAAmB;EACnB,kBAAkB;EAClB,cAAc;AAChB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,WAAW;EACX,aAAa;AACf;AACA;EACE,WAAW;EACX,aAAa;AACf;AACA;EACE,WAAW;EACX,WAAW;AACb;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,oBAAoB;EACpB,8CAA8C;EAC9C,mCAAmC;EACnC,sBAAsB;EACtB,2BAA2B;EAC3B,sBAAsB;EACtB,eAAe;EACf,SAAS;EACT,eAAe;EACf,uBAAuB;AACzB;AACA;EACE,oBAAoB;EACpB,uBAAuB;AACzB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,uBAAuB;EACvB,mCAAmC;EACnC,oCAAoC;EACpC,sBAAsB;EACtB,iBAAiB;EACjB,wCAAwC;EACxC,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,6CAA6C;AAC/C;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,cAAc;AAChB;AACA;EACE,eAAe;EACf,uBAAuB;EACvB,sBAAsB;AACxB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,oBAAoB;EACpB,uBAAuB;EACvB,2BAA2B;EAC3B,oCAAoC;EACpC,6CAA6C;EAC7C,sBAAsB;EACtB,qBAAqB;EACrB,cAAc;AAChB;AACA;EACE,qCAAqC;EACrC,sBAAsB;EACtB,mBAAmB;EACnB,eAAe;EACf,eAAe;AACjB;AACA;EACE,cAAc;EACd,kBAAkB;AACpB;AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,+BAA+B;EAC/B,mBAAmB;EACnB,sBAAsB;EACtB,qBAAqB;EACrB,kBAAkB;EAClB,UAAU;AACZ;AACA;EACE,oBAAoB;EACpB,iBAAiB;EACjB,gBAAgB;EAChB,qBAAqB;EACrB,qBAAqB;AACvB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,iBAAiB;EACjB,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,uBAAuB;AACzB;AACA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,gCAAgC;EAChC,oBAAoB;EACpB,8CAA8C;EAC9C,eAAe;AACjB;AACA;EACE,+BAA+B;AACjC;AACA;EACE,YAAY;EACZ,mBAAmB;EACnB,+BAA+B;AACjC;AACA;AACA,iBAAiB;AACjB;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,qCAAqC;EACrC,0BAA0B;EAC1B,4CAA4C;AAC9C;AACA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,yBAAyB;EACzB,sBAAsB;EACtB,oBAAoB;AACtB;AACA;AACA;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,gBAAgB;EAChB,oBAAoB;EACpB,eAAe;EACf,sBAAsB;EACtB,wBAAwB;AAC1B;AACA;EACE,oBAAoB;AACtB;AACA;EACE,6BAA6B;EAC7B,oBAAoB;AACtB;AACA;EACE,+BAA+B;AACjC;AACA;EACE,mBAAmB;EACnB,UAAU;EACV,WAAW;EACX,+BAA+B;EAC/B,oBAAoB;EACpB,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,gCAAgC;EAChC,oBAAoB;EACpB,+BAA+B;EAC/B,iBAAiB;EACjB,qBAAqB;EACrB,kBAAkB;EAClB,cAAc;AAChB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,gBAAgB;EAChB,oBAAoB;AACtB;AACA;EACE,gBAAgB;EAChB,oBAAoB;AACtB;AACA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,eAAe;EACf,kBAAkB;EAClB,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,+BAA+B;EAC/B,oBAAoB;EACpB,wBAAwB;EACxB,uBAAuB;EACvB,oBAAoB;AACtB;AACA;EACE,wBAAwB;EACxB,+BAA+B;AACjC;AACA;EACE;IACE,UAAU;IACV,6BAA6B;EAC/B;EACA;IACE,aAAa;IACb,wBAAwB;EAC1B;AACF;AACA;EACE;IACE,aAAa;IACb,wBAAwB;EAC1B;EACA;IACE,UAAU;IACV,6BAA6B;EAC/B;AACF;AACA;EACE,UAAU;EACV,YAAY;EACZ,+BAA+B;EAC/B,oBAAoB;EACpB,kBAAkB;AACpB;AACA;EACE,cAAc;EACd,gBAAgB;EAChB,sBAAsB;EACtB,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,gEAAgE;EAChE,sBAAsB;EACtB,WAAW;EACX,aAAa;AACf;AACA;EACE,sBAAsB;EACtB,aAAa;EACb,4CAA4C;EAC5C,gBAAgB;AAClB;AACA;EACE,4BAA4B;EAC5B,gEAAgE;AAClE;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,oBAAoB;EACpB,yBAAyB;AAC3B;AACA;EACE,oBAAoB;EACpB,yBAAyB;AAC3B;AACA;EACE,oBAAoB;EACpB,uBAAuB;AACzB;AACA;EACE,iBAAiB;EACjB,UAAU;EACV,oBAAoB;EACpB,kBAAkB;EAClB,eAAe;AACjB;AACA;EACE,+BAA+B;EAC/B,sBAAsB;EACtB,iCAAiC;AACnC;AACA;EACE,+BAA+B;AACjC;AACA;EACE,eAAe;EACf,UAAU;EACV,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,cAAc;EACd,4BAA4B,EAAE,mBAAmB;EACjD,iCAAiC,EAAE,qBAAqB;EACxD,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,yBAAyB;EACzB,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,cAAc;EACd,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,uBAAuB;AACzB;AACA;EACE,oBAAoB;EACpB,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,iBAAiB;EACjB,oBAAoB;AACtB;AACA;EACE,iBAAiB;EACjB,sBAAsB;EACtB,WAAW;EACX,oBAAoB;AACtB;AACA;EACE,iBAAiB;EACjB,gEAAgE;EAChE,sBAAsB;EACtB,WAAW;EACX,aAAa;EACb,oBAAoB;EACpB,gBAAgB;AAClB;AACA;EACE,aAAa;AACf;AACA;EACE,YAAY;EACZ,sCAAsC;EACtC,gBAAgB;EAChB,sBAAsB;EACtB,aAAa;AACf;AACA;EACE,gBAAgB;EAChB,aAAa;AACf;AACA;EACE,YAAY;EACZ,sCAAsC;EACtC,gBAAgB;EAChB,aAAa;EACb,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,aAAa;AACf;AACA;EACE,uBAAuB;EACvB,YAAY;EACZ,sCAAsC;EACtC,gBAAgB;EAChB,sBAAsB;EACtB,aAAa;AACf;AACA;EACE,gBAAgB;EAChB,aAAa;AACf;AACA;;AAEA;AACA;EACE,kBAAkB;AACpB",sourcesContent:[":root {\n  --background-light-blue: rgb(245, 246, 247);\n  --gray-0: #323335;\n  --gray-1: #505153;\n  --gray-2: #93959b;\n  --gray-3: #93959b;\n  --gray-4: #aaaeb8;\n  --gray-5: #c3c5c7;\n  --gray-6: #dbdee0;\n  --gray-7: #e8ebec;\n  --gray-8: #f5f6f7;\n  --red-1: rgb(248, 77, 105);\n  --brown-1: rgb(184, 152, 105);\n  --orange-1: rgb(247, 168, 22);\n  --yellow-1: rgb(248, 196, 25);\n  --yellow-2: rgb(253, 251, 244);\n  --lime-1: rgb(115, 224, 88);\n  --forest-1: rgb(56, 170, 117);\n  --blue-1: rgb(59, 118, 228);\n\n  --sidebar-width: 15rem;\n}\nhtml {\n  font-size: 16px;\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n}\n/* .app-header {\n  background-color: #ddd;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 4em;\n  width: 100%;\n} */\n.app-container {\n  display: grid;\n  grid-template-columns: var(--sidebar-width) 1fr;\n  height: 100vh;\n}\n/* Adds a shadow behind the main area */\n/* .app-container::after {\n  z-index: 100;\n  position: fixed;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  width: calc(100vw - var(--sidebar-width));\n  background-color: rgba(255,255,255,0);\n  box-shadow: 0 0 16px rgba(80,80,80,0.08);\n  content: \"\";\n  pointer-events: none;\n} */\n.app-sidebar {\n  font-size: 0.93rem;\n  /* background-color: var(--background-light-blue); */\n  background-color: var(--gray-8);\n  height: calc(100% - 2.6rem);\n  width: var(--sidebar-width);\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  display: inline-block;\n  overflow: auto;\n}\n.app-lists {\n  margin: 2rem 1.2rem;\n}\n.sidebar-list {\n  color: var(--gray-1);\n  line-height: 1.2em;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  /* width: 100%; */\n  padding: 0.45rem 0.4rem;\n  margin-bottom: 0.1rem;\n  border-radius: 5px;\n  transition: background-color 0.2s;\n  cursor: pointer;\n}\n.sidebar-list:hover {\n  background-color: var(--gray-7);\n}\n.sidebar-list-selected {\n  background-color: var(--gray-6);\n}\n.sidebar-list-selected:hover {\n  background-color: var(--gray-6);\n}\n.sidebar-list-left {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.sidebar-list-right {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n}\n.sidebar-list-icon {\n  text-align: center;\n  font-size: 1em;\n  width: 1.6rem;\n  position: relative;\n  top: 0.05em;\n  right: 0.2em;\n}\n.fa-inbox {\n  color: var(--blue-1);\n  font-size: 0.9em;\n}\n.fa-star {\n  color: var(--yellow-1);\n}\n.fa-calendar-alt {\n  color: var(--red-1);\n}\n.main-footer-buttons .fa-calendar-alt {\n  color: var(--gray-5);\n}\n.fa-layer-group {\n  color: var(--gray-4);\n}\n.anytime {\n  color: var(--forest-1);\n}\n.fa-archive {\n  color: var(--brown-1);\n}\n.fa-book {\n  color: var(--lime-1);\n}\n.fa-trash {\n  color: var(--gray-2);\n}\n.fa-border-all {\n  color: var(--gray-2);\n}\n.fa-arrow-right {\n  color: var(--gray-5);\n}\n.fa-search {\n  color: var(--gray-2);\n}\n.sidebar-list-progress {\n  margin-left: 0.18em;\n  margin-right: 0.45em;\n  width: 1em;\n  height: 1em;\n  border: 2px solid var(--gray-2);\n  border-radius: 100%;\n  box-sizing: border-box;\n  position: relative;\n  top: 0.07em;\n}\n.qty {\n  \n}\n.qty-alert {\n  color: white;\n  background-color: var(--red-1);\n  font-size: 0.88em;\n  padding: 0.13em 0.5em 0.15em 0.5em;\n  border-radius: 100px;\n  margin-right: 0.5em;\n  position: relative;\n  bottom: 0.13em;\n}\n.bold {\n  font-weight: bold;\n}\n.divider-sm {\n  width: 100%;\n  height: 0.8em;\n}\n.divider-md {\n  width: 100%;\n  height: 1.4em;\n}\n.divider-lg {\n  width: 100%;\n  height: 2em;\n}\n.app-sidebar-footer {\n  display: flex;\n  flex-direction: row;\n  color: var(--gray-1);\n  background-color: var(--background-light-blue);\n  border-top: 1px solid var(--gray-6);\n  box-sizing: border-box;\n  width: var(--sidebar-width);\n  padding: 0.9rem 1.5rem;\n  position: fixed;\n  bottom: 0;\n  cursor: pointer;\n  transition: color 0.15s;\n}\n.fa-plus {\n  color: var(--gray-2);\n  transition: color 0.15s;\n}\n.app-sidebar-footer:hover {\n  color: var(--blue-1);\n}\n.app-sidebar-footer:hover .fa-plus{\n  color: var(--blue-1);\n}\n.app-main-footer {\n  font-size: 0.93rem;\n  color: var(--gray-1);\n  background-color: white;\n  border-top: 1px solid var(--gray-6);\n  border-left: 1px solid var(--gray-6);\n  box-sizing: border-box;\n  padding: 0 1.5rem;\n  width: calc(100% - var(--sidebar-width));\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  /* box-shadow: 0 0 12px rgba(80,80,80,0.1); */\n}\n.main-footer-buttons {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  max-width: 20em;\n  margin: 0 auto;\n}\n.main-footer-button {\n  cursor: pointer;\n  transition: color 0.15s;\n  padding: 0.9rem 1.5rem;\n}\n.main-footer-button:hover {\n  color: var(--blue-1);\n}\n.app-main {\n  color: var(--gray-1);\n  background-color: white;\n  height: calc(100% - 2.6rem);\n  border-left: 1px solid var(--gray-6);\n  /* box-shadow: 0 0 12px rgba(80,80,80,0.1); */\n  box-sizing: border-box;\n  display: inline-block;\n  overflow: auto;\n}\n.list-content {\n  /* border: 1px solid var(--gray-5); */\n  box-sizing: border-box;\n  margin: 4.6rem 4rem;\n  max-width: 75ch;\n  min-width: 30ch;\n}\n.list-content-header {\n  font-size: 1em;\n  margin-bottom: 2em;\n}\n.list-title-progress {\n  margin-right: 0.5em;\n  width: 1.6em;\n  height: 1.6em;\n  border: 3px solid var(--blue-1);\n  border-radius: 100%;\n  box-sizing: border-box;\n  display: inline-block;\n  position: relative;\n  top: 0.2em;\n}\n.list-title {\n  color: var(--gray-1);\n  font-weight: bold;\n  font-size: 1.8em;\n  margin-bottom: 0.6rem;\n  display: inline-block;\n}\n.list-description {\n  font-size: 1.05em;\n}\n.list-filters {\n  font-size: 0.98em;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin: 2.2em 0 2.8em 0;;\n}\n.list-filter {\n  color: var(--gray-3);\n  margin-right: 0.1em;\n  padding: 0.3em 0.7em 0.2em 0.7em;\n  border-radius: 100px;\n  transition: color 0.15s, background-color 0.2s;\n  cursor: pointer;\n}\n.list-filter:hover {\n  background-color: var(--gray-7);\n}\n.list-filter-selected {\n  color: white;\n  margin-right: 0.5em;\n  background-color: var(--gray-5);\n}\n.list-content-main {\nfont-size: 0.98em;\n}\n.section-header {\n  width: 100%;\n  padding-bottom: 0.6em;\n  /* background-color: var(--gray-8); */\n  /* margin-bottom: 0.6em; */\n  /* border-bottom: 1px solid var(--gray-5); */\n}\n.section-header h2 {\n  font-size: 1.05em;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.13em;\n  color: var(--gray-1);\n}\n.list-items {\n}\n.list-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.4em 0;\n  margin-bottom: 0.1em;\n  cursor: pointer;\n  transition: color 0.2s;\n  /* position: relative; */\n}\n.list-item:hover {\n  color: var(--gray-3);\n}\n.list-item-completed div {\n  text-decoration: line-through;\n  color: var(--gray-5);\n}\n.list-item-completed .list-item-box {\n  background-color: var(--gray-6);\n}\n.list-item-box {\n  margin-right: 0.7em;\n  width: 1em;\n  height: 1em;\n  border: 1px solid var(--gray-4);\n  border-radius: 100px;\n  display: inline-block;\n  position: relative;\n  /* top: 0.25em; */\n}\n.list-item-label {\n  color: var(--gray-4);\n  margin-left: 0.5em;\n  margin-top: -0.5em;\n  margin-bottom: -0.5em;\n  padding: 0.2em 0.6em 0.2em 0.7em;\n  border-radius: 100px;\n  border: 1px solid var(--gray-4);\n  font-size: 0.75em;\n  display: inline-block;\n  position: relative;\n  bottom: 0.05em;\n}\n.item-name {\n  display: inline-block;\n}\n.item-details {\n  padding-top: 0.3em;\n  display: flex;\n  flex-direction: row;\n  font-size: 0.84em;\n}\n.item-details div {\n  margin-right: 0.8em;\n}\n.item-due-date {\n  font-weight: 600;\n  color: var(--blue-1);\n}\n.item-duration {\n  font-weight: 500;\n  color: var(--blue-1);\n}\n.item-notes {\n  font-weight: 600;\n  color: var(--orange-1);\n}\n.item-priority {\n  font-weight: 600;\n}\n.priority-1 {\n  color: var(--red-1);\n}\n.priority-2 {\n  color: var(--orange-1);\n}\n.priority-3 {\n  color: var(--forest-1);\n}\n.notes-pop-up {\n  font-size: 0.9em;\n  background-color: white;\n  max-width: 30ch;\n  line-height: 1.3em;\n  color: var(--gray-1);\n  position: absolute;\n  padding: 0.7em 1em;\n  border: 1px solid var(--gray-4);\n  border-radius: 0.3em;\n  animation-duration: 0.3s;\n  animation-name: slideup;\n  pointer-events: none;\n}\n.notes-pop-up-leave {\n  animation-duration: 0.3s;\n  animation-name: slideup-reverse;\n}\n@keyframes slideup {\n  from {\n    opacity: 0;\n    transform: translateY(-0.4em);\n  }\n  to {\n    opacity: 100%;\n    transform: translateY(0);\n  }\n}\n@keyframes slideup-reverse {\n  from {\n    opacity: 100%;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(-0.4em);\n  }\n}\n.add-dialog {\n  width: 80%;\n  padding: 1em;\n  border: 1px solid var(--gray-6);\n  border-radius: 0.5em;\n  margin-top: 0.75em;\n}\n.a-d-name {\n  font-size: 1em;\n  font-weight: 600;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 2px;\n}\n.a-d-notes {\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n  box-sizing: border-box;\n  width: 100%;\n  height: 4.4em;\n}\n.a-d-footer {\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 31% 22.5% 22.5% 22.5%;\n  column-gap: 0.5%;\n}\n.a-d-date {\n  /* box-sizing: border-box; */\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n}\n.a-d-list {\n  /* box-sizing: border-box; */\n}\n.a-d-priority {\n  /* box-sizing: border-box; */\n}\n.a-d-duration {\n  /* box-sizing: border-box; */\n}\n.add-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0.1em 0 1em;\n}\n.change-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0.1em 0 1em;\n}\n.cancel-task-btn {\n  padding: 0.3em 0.8em;\n  margin: 0.6em 0 0 0.1em;\n}\n.context-menu {\n  font-size: 0.94em;\n  width: 7em;\n  color: var(--gray-8);\n  position: absolute;\n  cursor: pointer;\n}\n.context-menu div {\n  background-color: var(--gray-0);\n  padding: 0.75em 0.75em;\n  transition: background-color 0.2s;\n}\n.context-menu div:hover {\n  background-color: var(--blue-1);\n}\n.list-modal {\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.list-modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  min-width: 25%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.list-modal button {\n  padding: 0.3em 0.8em;\n  margin-top: 0.5em;\n  margin-right: 0.3em;\n}\n.list-modal-prompt {\n  font-size: 1.06em;\n  margin-bottom: 0.5em;\n}\n.list-modal-name {\n  font-size: 0.95em;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 0.3em;\n}\n.list-modal-description {\n  font-size: 0.95em;\n  font-family: 'Source Sans Pro', 'Helvetica', 'Arial', sans-serif;\n  box-sizing: border-box;\n  width: 100%;\n  height: 3.3em;\n  margin-bottom: 0.3em;\n  resize: vertical;\n}\n.hidden {\n  display: none;\n}\ninput {\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  padding-bottom: 0.2rem;\n  outline: none;\n}\ninput:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\ntextarea {\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  outline: none;\n  resize: vertical;\n  min-height: 2em;\n}\ntextarea:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\nselect {\n  background-color: white;\n  border: none;\n  border-bottom: 1px solid var(--gray-3);\n  border-radius: 0;\n  padding-bottom: 0.2rem;\n  outline: none;\n}\nselect:focus-visible {\n  border-radius: 0;\n  outline: none;\n}\ninput[type=\"date\"] {\n\n}\np {\n  line-height: 1.4em;\n}"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&a[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),n.push(d))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,a=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var r,a,o=[],i=!0,s=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);i=!0);}catch(e){s=!0,a=e}finally{try{i||null==t.return||t.return()}finally{if(s)throw a}}return o}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),A="/*# ".concat(d," */"),l=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(l).concat([A]).join("\n")}return[o].join("\n")}},695:e=>{var n={};e.exports=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var d=e[s],A=r.base?d[0]+r.base:d[0],l=o[A]||0,c="".concat(A," ").concat(l);o[A]=l+1;var u=t(c),m={css:d[1],media:d[2],sourceMap:d[3]};-1!==u?(n[u].references++,n[u].updater(m)):n.push({identifier:c,updater:a(m,r),references:1}),i.push(c)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var d=r(e,a),A=0;A<o.length;A++){var l=t(o[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=d}}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,a=t.media,o=t.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(695),i=t.n(o),s=t(216),d=t.n(s),A=t(212),l={styleTagTransform:function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}},setAttributes:function(e){var n=t.nc;n&&e.setAttribute("nonce",n)},insert:function(e){var n=i()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}};l.domAPI=a(),l.insertStyleElement=d(),n()(A.Z,l),A.Z&&A.Z.locals&&A.Z.locals;var c=t(426),u={styleTagTransform:function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}},setAttributes:function(e){var n=t.nc;n&&e.setAttribute("nonce",n)},insert:function(e){var n=i()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}};function m(e,n){if(n.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+n.length+" present")}function g(e){m(1,arguments);var n=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===n?new Date(e.getTime()):"number"==typeof e||"[object Number]"===n?new Date(e):("string"!=typeof e&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function C(e){m(1,arguments);var n=g(e);return!isNaN(n)}u.domAPI=a(),u.insertStyleElement=d(),n()(c.Z,u),c.Z&&c.Z.locals&&c.Z.locals;var p={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function h(e){return function(n){var t=n||{},r=t.width?String(t.width):e.defaultWidth;return e.formats[r]||e.formats[e.defaultWidth]}}var f,B={date:h({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:h({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:h({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},b={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function E(e){return function(n,t){var r,a=t||{};if("formatting"===(a.context?String(a.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,i=a.width?String(a.width):o;r=e.formattingValues[i]||e.formattingValues[o]}else{var s=e.defaultWidth,d=a.width?String(a.width):e.defaultWidth;r=e.values[d]||e.values[s]}return r[e.argumentCallback?e.argumentCallback(n):n]}}function v(e){return function(n,t){var r=String(n),a=t||{},o=a.width,i=o&&e.matchPatterns[o]||e.matchPatterns[e.defaultMatchWidth],s=r.match(i);if(!s)return null;var d,A=s[0],l=o&&e.parsePatterns[o]||e.parsePatterns[e.defaultParseWidth];return d="[object Array]"===Object.prototype.toString.call(l)?function(e,n){for(var t=0;t<e.length;t++)if(e[t].test(A))return t}(l):function(e,n){for(var t in e)if(e.hasOwnProperty(t)&&e[t].test(A))return t}(l),d=e.valueCallback?e.valueCallback(d):d,{value:d=a.valueCallback?a.valueCallback(d):d,rest:r.slice(A.length)}}}const y={code:"en-US",formatDistance:function(e,n,t){var r;return t=t||{},r="string"==typeof p[e]?p[e]:1===n?p[e].one:p[e].other.replace("{{count}}",n),t.addSuffix?t.comparison>0?"in "+r:r+" ago":r},formatLong:B,formatRelative:function(e,n,t,r){return b[e]},localize:{ordinalNumber:function(e,n){var t=Number(e),r=t%100;if(r>20||r<10)switch(r%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:E({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:E({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return Number(e)-1}}),month:E({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:E({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:E({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(f={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e,n){var t=String(e),r=n||{},a=t.match(f.matchPattern);if(!a)return null;var o=a[0],i=t.match(f.parsePattern);if(!i)return null;var s=f.valueCallback?f.valueCallback(i[0]):i[0];return{value:s=r.valueCallback?r.valueCallback(s):s,rest:t.slice(o.length)}}),era:v({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:v({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:v({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:v({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:v({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function w(e){if(null===e||!0===e||!1===e)return NaN;var n=Number(e);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}function x(e,n){m(2,arguments);var t=g(e).getTime(),r=w(n);return new Date(t+r)}function k(e,n){m(2,arguments);var t=w(n);return x(e,-t)}function L(e,n){for(var t=e<0?"-":"",r=Math.abs(e).toString();r.length<n;)r="0"+r;return t+r}const T=function(e,n){var t=e.getUTCFullYear(),r=t>0?t:1-t;return L("yy"===n?r%100:r,n.length)},S=function(e,n){var t=e.getUTCMonth();return"M"===n?String(t+1):L(t+1,2)},z=function(e,n){return L(e.getUTCDate(),n.length)},q=function(e,n){return L(e.getUTCHours()%12||12,n.length)},D=function(e,n){return L(e.getUTCHours(),n.length)},M=function(e,n){return L(e.getUTCMinutes(),n.length)},j=function(e,n){return L(e.getUTCSeconds(),n.length)},P=function(e,n){var t=n.length,r=e.getUTCMilliseconds();return L(Math.floor(r*Math.pow(10,t-3)),n.length)};var U=864e5;function W(e){m(1,arguments);var n=1,t=g(e),r=t.getUTCDay(),a=(r<n?7:0)+r-n;return t.setUTCDate(t.getUTCDate()-a),t.setUTCHours(0,0,0,0),t}function Y(e){m(1,arguments);var n=g(e),t=n.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(t+1,0,4),r.setUTCHours(0,0,0,0);var a=W(r),o=new Date(0);o.setUTCFullYear(t,0,4),o.setUTCHours(0,0,0,0);var i=W(o);return n.getTime()>=a.getTime()?t+1:n.getTime()>=i.getTime()?t:t-1}function I(e){m(1,arguments);var n=Y(e),t=new Date(0);t.setUTCFullYear(n,0,4),t.setUTCHours(0,0,0,0);var r=W(t);return r}var N=6048e5;function O(e,n){m(1,arguments);var t=n||{},r=t.locale,a=r&&r.options&&r.options.weekStartsOn,o=null==a?0:w(a),i=null==t.weekStartsOn?o:w(t.weekStartsOn);if(!(i>=0&&i<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var s=g(e),d=s.getUTCDay(),A=(d<i?7:0)+d-i;return s.setUTCDate(s.getUTCDate()-A),s.setUTCHours(0,0,0,0),s}function F(e,n){m(1,arguments);var t=g(e,n),r=t.getUTCFullYear(),a=n||{},o=a.locale,i=o&&o.options&&o.options.firstWeekContainsDate,s=null==i?1:w(i),d=null==a.firstWeekContainsDate?s:w(a.firstWeekContainsDate);if(!(d>=1&&d<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var A=new Date(0);A.setUTCFullYear(r+1,0,d),A.setUTCHours(0,0,0,0);var l=O(A,n),c=new Date(0);c.setUTCFullYear(r,0,d),c.setUTCHours(0,0,0,0);var u=O(c,n);return t.getTime()>=l.getTime()?r+1:t.getTime()>=u.getTime()?r:r-1}function H(e,n){m(1,arguments);var t=n||{},r=t.locale,a=r&&r.options&&r.options.firstWeekContainsDate,o=null==a?1:w(a),i=null==t.firstWeekContainsDate?o:w(t.firstWeekContainsDate),s=F(e,n),d=new Date(0);d.setUTCFullYear(s,0,i),d.setUTCHours(0,0,0,0);var A=O(d,n);return A}var X=6048e5;function G(e,n){var t=e>0?"-":"+",r=Math.abs(e),a=Math.floor(r/60),o=r%60;if(0===o)return t+String(a);var i=n||"";return t+String(a)+i+L(o,2)}function R(e,n){return e%60==0?(e>0?"-":"+")+L(Math.abs(e)/60,2):Q(e,n)}function Q(e,n){var t=n||"",r=e>0?"-":"+",a=Math.abs(e);return r+L(Math.floor(a/60),2)+t+L(a%60,2)}const Z={G:function(e,n,t){var r=e.getUTCFullYear()>0?1:0;switch(n){case"G":case"GG":case"GGG":return t.era(r,{width:"abbreviated"});case"GGGGG":return t.era(r,{width:"narrow"});case"GGGG":default:return t.era(r,{width:"wide"})}},y:function(e,n,t){if("yo"===n){var r=e.getUTCFullYear(),a=r>0?r:1-r;return t.ordinalNumber(a,{unit:"year"})}return T(e,n)},Y:function(e,n,t,r){var a=F(e,r),o=a>0?a:1-a;return"YY"===n?L(o%100,2):"Yo"===n?t.ordinalNumber(o,{unit:"year"}):L(o,n.length)},R:function(e,n){return L(Y(e),n.length)},u:function(e,n){return L(e.getUTCFullYear(),n.length)},Q:function(e,n,t){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(n){case"Q":return String(r);case"QQ":return L(r,2);case"Qo":return t.ordinalNumber(r,{unit:"quarter"});case"QQQ":return t.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(r,{width:"narrow",context:"formatting"});case"QQQQ":default:return t.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,n,t){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(n){case"q":return String(r);case"qq":return L(r,2);case"qo":return t.ordinalNumber(r,{unit:"quarter"});case"qqq":return t.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(r,{width:"narrow",context:"standalone"});case"qqqq":default:return t.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,n,t){var r=e.getUTCMonth();switch(n){case"M":case"MM":return S(e,n);case"Mo":return t.ordinalNumber(r+1,{unit:"month"});case"MMM":return t.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(r,{width:"narrow",context:"formatting"});case"MMMM":default:return t.month(r,{width:"wide",context:"formatting"})}},L:function(e,n,t){var r=e.getUTCMonth();switch(n){case"L":return String(r+1);case"LL":return L(r+1,2);case"Lo":return t.ordinalNumber(r+1,{unit:"month"});case"LLL":return t.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(r,{width:"narrow",context:"standalone"});case"LLLL":default:return t.month(r,{width:"wide",context:"standalone"})}},w:function(e,n,t,r){var a=function(e,n){m(1,arguments);var t=g(e),r=O(t,n).getTime()-H(t,n).getTime();return Math.round(r/X)+1}(e,r);return"wo"===n?t.ordinalNumber(a,{unit:"week"}):L(a,n.length)},I:function(e,n,t){var r=function(e){m(1,arguments);var n=g(e),t=W(n).getTime()-I(n).getTime();return Math.round(t/N)+1}(e);return"Io"===n?t.ordinalNumber(r,{unit:"week"}):L(r,n.length)},d:function(e,n,t){return"do"===n?t.ordinalNumber(e.getUTCDate(),{unit:"date"}):z(e,n)},D:function(e,n,t){var r=function(e){m(1,arguments);var n=g(e),t=n.getTime();n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0);var r=n.getTime(),a=t-r;return Math.floor(a/U)+1}(e);return"Do"===n?t.ordinalNumber(r,{unit:"dayOfYear"}):L(r,n.length)},E:function(e,n,t){var r=e.getUTCDay();switch(n){case"E":case"EE":case"EEE":return t.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(r,{width:"short",context:"formatting"});case"EEEE":default:return t.day(r,{width:"wide",context:"formatting"})}},e:function(e,n,t,r){var a=e.getUTCDay(),o=(a-r.weekStartsOn+8)%7||7;switch(n){case"e":return String(o);case"ee":return L(o,2);case"eo":return t.ordinalNumber(o,{unit:"day"});case"eee":return t.day(a,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(a,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(a,{width:"short",context:"formatting"});case"eeee":default:return t.day(a,{width:"wide",context:"formatting"})}},c:function(e,n,t,r){var a=e.getUTCDay(),o=(a-r.weekStartsOn+8)%7||7;switch(n){case"c":return String(o);case"cc":return L(o,n.length);case"co":return t.ordinalNumber(o,{unit:"day"});case"ccc":return t.day(a,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(a,{width:"narrow",context:"standalone"});case"cccccc":return t.day(a,{width:"short",context:"standalone"});case"cccc":default:return t.day(a,{width:"wide",context:"standalone"})}},i:function(e,n,t){var r=e.getUTCDay(),a=0===r?7:r;switch(n){case"i":return String(a);case"ii":return L(a,n.length);case"io":return t.ordinalNumber(a,{unit:"day"});case"iii":return t.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(r,{width:"short",context:"formatting"});case"iiii":default:return t.day(r,{width:"wide",context:"formatting"})}},a:function(e,n,t){var r=e.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"aaaa":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(e,n,t){var r,a=e.getUTCHours();switch(r=12===a?"noon":0===a?"midnight":a/12>=1?"pm":"am",n){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"bbbb":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(e,n,t){var r,a=e.getUTCHours();switch(r=a>=17?"evening":a>=12?"afternoon":a>=4?"morning":"night",n){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"BBBB":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(e,n,t){if("ho"===n){var r=e.getUTCHours()%12;return 0===r&&(r=12),t.ordinalNumber(r,{unit:"hour"})}return q(e,n)},H:function(e,n,t){return"Ho"===n?t.ordinalNumber(e.getUTCHours(),{unit:"hour"}):D(e,n)},K:function(e,n,t){var r=e.getUTCHours()%12;return"Ko"===n?t.ordinalNumber(r,{unit:"hour"}):L(r,n.length)},k:function(e,n,t){var r=e.getUTCHours();return 0===r&&(r=24),"ko"===n?t.ordinalNumber(r,{unit:"hour"}):L(r,n.length)},m:function(e,n,t){return"mo"===n?t.ordinalNumber(e.getUTCMinutes(),{unit:"minute"}):M(e,n)},s:function(e,n,t){return"so"===n?t.ordinalNumber(e.getUTCSeconds(),{unit:"second"}):j(e,n)},S:function(e,n){return P(e,n)},X:function(e,n,t,r){var a=(r._originalDate||e).getTimezoneOffset();if(0===a)return"Z";switch(n){case"X":return R(a);case"XXXX":case"XX":return Q(a);case"XXXXX":case"XXX":default:return Q(a,":")}},x:function(e,n,t,r){var a=(r._originalDate||e).getTimezoneOffset();switch(n){case"x":return R(a);case"xxxx":case"xx":return Q(a);case"xxxxx":case"xxx":default:return Q(a,":")}},O:function(e,n,t,r){var a=(r._originalDate||e).getTimezoneOffset();switch(n){case"O":case"OO":case"OOO":return"GMT"+G(a,":");case"OOOO":default:return"GMT"+Q(a,":")}},z:function(e,n,t,r){var a=(r._originalDate||e).getTimezoneOffset();switch(n){case"z":case"zz":case"zzz":return"GMT"+G(a,":");case"zzzz":default:return"GMT"+Q(a,":")}},t:function(e,n,t,r){var a=r._originalDate||e;return L(Math.floor(a.getTime()/1e3),n.length)},T:function(e,n,t,r){return L((r._originalDate||e).getTime(),n.length)}};function J(e,n){switch(e){case"P":return n.date({width:"short"});case"PP":return n.date({width:"medium"});case"PPP":return n.date({width:"long"});case"PPPP":default:return n.date({width:"full"})}}function $(e,n){switch(e){case"p":return n.time({width:"short"});case"pp":return n.time({width:"medium"});case"ppp":return n.time({width:"long"});case"pppp":default:return n.time({width:"full"})}}const V={p:$,P:function(e,n){var t,r=e.match(/(P+)(p+)?/),a=r[1],o=r[2];if(!o)return J(e,n);switch(a){case"P":t=n.dateTime({width:"short"});break;case"PP":t=n.dateTime({width:"medium"});break;case"PPP":t=n.dateTime({width:"long"});break;case"PPPP":default:t=n.dateTime({width:"full"})}return t.replace("{{date}}",J(a,n)).replace("{{time}}",$(o,n))}};function _(e){var n=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return n.setUTCFullYear(e.getFullYear()),e.getTime()-n.getTime()}var K=["D","DD"],ee=["YY","YYYY"];function ne(e){return-1!==K.indexOf(e)}function te(e){return-1!==ee.indexOf(e)}function re(e,n,t){if("YYYY"===e)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(n,"`) for formatting years to the input `").concat(t,"`; see: https://git.io/fxCyr"));if("YY"===e)throw new RangeError("Use `yy` instead of `YY` (in `".concat(n,"`) for formatting years to the input `").concat(t,"`; see: https://git.io/fxCyr"));if("D"===e)throw new RangeError("Use `d` instead of `D` (in `".concat(n,"`) for formatting days of the month to the input `").concat(t,"`; see: https://git.io/fxCyr"));if("DD"===e)throw new RangeError("Use `dd` instead of `DD` (in `".concat(n,"`) for formatting days of the month to the input `").concat(t,"`; see: https://git.io/fxCyr"))}var ae=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,oe=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,ie=/^'([^]*?)'?$/,se=/''/g,de=/[a-zA-Z]/;function Ae(e){return e.match(ie)[1].replace(se,"'")}const le=(e,n,t,r,a,o,i,s)=>({name:e,notes:n,dueDate:t,list:r,duration:a,priority:o,id:i,startDate:new Date(Date.now()),completed:s=s||!1}),ce=(()=>{const e=e=>"string"==typeof e?new Date(e):e;return{unparseDate:e,getDueDateShorthand:n=>{const t=new Date(Date.now()),r=e(n.dueDate),a=(r.getTime()-t.getTime())/1e3/60/60/24;return a<-.9?"Overdue":a<.1?"Today":a<1.1?"Tomorrow":function(e,n,t){m(2,arguments);var r=String(n),a=t||{},o=a.locale||y,i=o.options&&o.options.firstWeekContainsDate,s=null==i?1:w(i),d=null==a.firstWeekContainsDate?s:w(a.firstWeekContainsDate);if(!(d>=1&&d<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var A=o.options&&o.options.weekStartsOn,l=null==A?0:w(A),c=null==a.weekStartsOn?l:w(a.weekStartsOn);if(!(c>=0&&c<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!o.localize)throw new RangeError("locale must contain localize property");if(!o.formatLong)throw new RangeError("locale must contain formatLong property");var u=g(e);if(!C(u))throw new RangeError("Invalid time value");var p=_(u),h=k(u,p),f={firstWeekContainsDate:d,weekStartsOn:c,locale:o,_originalDate:u};return r.match(oe).map((function(e){var n=e[0];return"p"===n||"P"===n?(0,V[n])(e,o.formatLong,f):e})).join("").match(ae).map((function(t){if("''"===t)return"'";var r=t[0];if("'"===r)return Ae(t);var i=Z[r];if(i)return!a.useAdditionalWeekYearTokens&&te(t)&&re(t,n,e),!a.useAdditionalDayOfYearTokens&&ne(t)&&re(t,n,e),i(h,t,o.localize,f);if(r.match(de))throw new RangeError("Format string contains an unescaped latin alphabet character `"+r+"`");return t})).join("")}(r,a<6.1?"EEEE":"MMM d")},getDueDateInputFormat:n=>{if(n.dueDate){const t=e(n.dueDate);let r=t.getMonth()+1;return 1==r.toString().length&&(r=`0${r}`),`${t.getFullYear()}-${r}-${t.getDate()}`}return""}}})(),ue=(()=>{const e=(e,n)=>n.todos.findIndex((n=>{if(n.id==e)return!0}));return{addTodo:(e,n)=>{n.todos.push(e)},removeTodo:(n,t)=>{const r=e(n,t);t.todos.splice(r,1)},toggleCompleted:(n,t)=>{const r=e(n,t);return 0==t.todos[r].completed?(t.todos[r].completed=!0,!0):(t.todos[r].completed=!1,!1)},getIndexFromId:e,getTaskFromId:(n,t)=>t.todos[e(n,t)],getPercentCompleted:e=>{let n=0;return e.todos.forEach((e=>{e.completed&&n++})),n/e.todos.length}}})(),me=(e,n,t,r,a,o)=>!0,ge=e=>{let n=null;const t=(e,t,r)=>{t.forEach((t=>{if(e.endsWith(t)){let a=parseFloat(e.substring(0,e.length-t.length));Number.isFinite(a)&&a>=0&&(n=a+r)}}))};return t(e,["m","min","minute","minutes"],"min"),t(e,["h","hr","hrs","hour","hours"],"hr"),n},Ce=(()=>{let e=0;return{addTask:({name:n,notes:t,dueDate:r,list:a,duration:o,priority:i,completed:s},d)=>{const A=le(n,t,r,a,o,i,e,s);ue.addTodo(A,d),e++},changeTask:({name:n,notes:t,dueDate:r,list:a,duration:o,priority:i},s,d)=>{const A=le(n,t,r,a,o,i,e);A.completed=ue.getTaskFromId(d,s).completed,s.todos[ue.getIndexFromId(d,s)]=A,e++},removeTask:(e,n)=>{ue.removeTodo(e,n),pe.displayList(n)},getId:()=>e,setId:n=>{e=n}}})(),pe=(()=>{document.querySelector("#add-task").addEventListener("click",(()=>{e("add")})),document.addEventListener("keydown",(function(n){n.shiftKey&&"N"==n.key&&null==document.querySelector(".add-area")&&(n.preventDefault(),e("add"))})),document.querySelector(".app-sidebar-footer").addEventListener("click",(()=>{t("add")}));const e=(e,t)=>{let r;if(t&&(r=t.dataset.id),null!=document.querySelector(".add-area"))return!1;{const a=document.createElement("div");a.classList.add("add-area");const o=document.createElement("div");o.classList.add("add-dialog");const i=document.createElement("input");i.classList.add("a-d-name"),i.autocomplete="chrome-off",i.placeholder="Name";const d=document.createElement("textarea");d.classList.add("a-d-notes"),d.placeholder="Notes",d.maxLength="200";const A=document.createElement("div");A.classList.add("a-d-footer");const l=document.createElement("input");l.classList.add("a-d-date"),l.type="date";const c=document.createElement("select");c.name="list",c.classList.add("a-d-list"),he.getLists().forEach((e=>{const n=document.createElement("option");n.value=e.id,n.innerText=e.name,n.classList.add("a-d-list-instance"),n.dataset.id=e.id,c.appendChild(n)}));const u=document.createElement("select");u.name="priority",u.classList.add("a-d-priority");const m=document.createElement("option");m.value="",m.innerText="priority",m.disabled=!0,m.selected=!0;const g=document.createElement("option");g.value="",g.innerText="none";const C=document.createElement("option");C.value="1",C.innerText="1";const p=document.createElement("option");p.value="2",p.innerText="2";const h=document.createElement("option");h.value="3",h.innerText="3",u.appendChild(m),u.appendChild(C),u.appendChild(p),u.appendChild(h),u.appendChild(g);const f=document.createElement("input");if(f.classList.add("a-d-duration"),f.placeholder="duration","edit"==e){const e=ue.getTaskFromId(r,he.getCurrentList());i.value=e.name,d.value=e.notes||"",l.value=ce.getDueDateInputFormat(e),c.value="",u.value=e.priority||"",f.value=e.duration||""}if(A.appendChild(l),A.appendChild(c),A.appendChild(u),A.appendChild(f),o.appendChild(i),o.appendChild(d),o.appendChild(A),a.appendChild(o),"add"==e){const e=document.createElement("button");e.classList.add("add-task-btn"),e.innerText="Add task",e.addEventListener("click",(()=>{B()}));const t=document.createElement("button");t.classList.add("cancel-task-btn"),t.innerText="Cancel",t.addEventListener("click",(()=>{n()})),a.appendChild(e),a.appendChild(t),a.addEventListener("keydown",(function(e){"Enter"==e.key?B():"Escape"==e.key&&n()})),document.querySelector(".list-items").appendChild(a)}else if("edit"==e){const e=document.createElement("button");e.classList.add("change-task-btn"),e.innerText="Save changes",e.addEventListener("click",(()=>{b()}));const r=document.createElement("button");r.classList.add("cancel-task-btn"),r.innerText="Cancel",r.addEventListener("click",(()=>{n(),t.classList.remove("hidden")})),a.appendChild(e),a.appendChild(r),a.addEventListener("keydown",(function(e){"Enter"==e.key?b():"Escape"==e.key&&(n(),t.classList.remove("hidden"))})),document.querySelector(".list-items").insertBefore(a,t)}document.querySelectorAll(".a-d-list-instance").forEach((e=>{e.dataset.id==he.getCurrentList().id&&(e.selected=!0)})),i.focus();const B=()=>{me(i.value,d.value,l.value,c.value,u.value,f.value)&&(Ce.addTask(E(),he.getLists()[he.getListIndexFromId(c.value)]),s(he.getCurrentList()))},b=()=>{if(me(i.value,d.value,l.value,c.value,u.value,f.value)){let e=ue.getTaskFromId(r,he.getCurrentList()).completed;c.value!=he.getCurrentList().id?(Ce.removeTask(r,he.getCurrentList()),Ce.addTask(E(e),he.getLists()[he.getListIndexFromId(c.value)])):(Ce.changeTask(E(e),he.getCurrentList(),r),s(he.getCurrentList()))}},E=e=>{const n=i.value,t=d.value;let r=null;l.value&&(r=new Date(v(l.value)));const a=c.value,o=u.value;return{name:n,notes:t,dueDate:r,list:a,duration:ge(f.value),priority:o,completed:e}},v=e=>{let n="";return n+=e.slice(5),n+="-",n+=e.slice(0,4),n};return!0}},n=()=>{document.querySelector(".add-area").remove()},t=(e,n)=>{const t=document.createElement("div");t.classList.add("list-modal");const a=document.createElement("div");a.classList.add("list-modal-content");const i=document.createElement("h2");i.classList.add("list-modal-prompt");const d=document.createElement("input");d.classList.add("list-modal-name"),d.placeholder="Name";const A=document.createElement("textarea");A.classList.add("list-modal-description"),A.placeholder="Description";const l=document.createElement("div");l.classList.add("list-modal-buttons");const c=document.createElement("button");c.classList.add("list-modal-button");const u=document.createElement("button");u.classList.add("list-modal-cancel-button"),"add"==e?(i.innerText="New List",c.innerText="Create",c.addEventListener("click",(()=>{g()})),u.innerText="Cancel",u.addEventListener("click",(()=>{r()})),t.addEventListener("keydown",(function(e){"Enter"==e.key?g():"Escape"==e.key&&r()}))):"edit"==e&&(i.innerText="Edit List",c.innerText="Confirm",u.innerText="Cancel",u.addEventListener("click",(()=>{r()})),d.value=he.getLists()[he.getListIndexFromId(n.dataset.id)].name,A.value=he.getLists()[he.getListIndexFromId(n.dataset.id)].description||"",c.addEventListener("click",(()=>{C(n)})),t.addEventListener("keydown",(function(e){"Enter"==e.key?C(n):"Escape"==e.key&&r()})));const m=document.querySelector(".app-container");a.appendChild(i),a.appendChild(d),a.appendChild(A),l.appendChild(c),l.appendChild(u),a.appendChild(l),t.appendChild(a),m.appendChild(t),d.focus(),t.addEventListener("mousedown",(function(e){e.target==t&&t.remove()}));const g=()=>{d.value&&(he.addList(d.value,A.value),s(he.getCurrentList()),o(),r())},C=e=>{d.value&&(he.getLists()[he.getListIndexFromId(e.dataset.id)].name=d.value,he.getLists()[he.getListIndexFromId(e.dataset.id)].description=A.value,s(he.getCurrentList()),o(),r())}},r=()=>{document.querySelector(".list-modal").remove()},a=()=>{const e=document.querySelector(".app-lists");e&&e.remove()},o=()=>{a();let e=he.getLists();const n=document.createElement("div");n.classList.add("app-lists"),e.forEach((e=>{const t=document.createElement("div");t.classList.add("sidebar-list"),e.id==he.getCurrentList().id&&t.classList.add("sidebar-list-selected");const r=document.createElement("div");r.classList.add("sidebar-list-left");const a=document.createElement("div");a.classList.add("sidebar-list-progress");const i=document.createElement("div");i.classList.add("sidebar-list-title"),i.innerText=e.name,a.dataset.id=e.id,i.dataset.id=e.id,r.dataset.id=e.id,t.dataset.id=e.id,r.appendChild(a),r.appendChild(i),t.appendChild(r),n.appendChild(t),t.addEventListener("click",(function(e){he.setCurrentList(e.target.dataset.id),s(he.getCurrentList()),o()})),t.addEventListener("contextmenu",(function(e){u(e),e.preventDefault()}),!1)}));const t=document.querySelector(".app-sidebar"),r=document.querySelector(".app-sidebar-footer");t.insertBefore(n,r)},i=()=>{const e=document.querySelector(".list-content");e&&e.remove()},s=e=>{i();const n=document.querySelector(".app-main"),t=document.createElement("div");t.classList.add("list-content");const r=document.createElement("div");r.classList.add("list-content-header");const a=he.getCurrentList(),o=document.createElement("h1");if(o.classList.add("list-title"),o.innerText=a.name,r.appendChild(o),a.description){const e=document.createElement("p");e.classList.add("list-description"),e.innerText=a.description,r.appendChild(e)}const s=document.createElement("div");s.classList.add("list-content-main");const A=document.createElement("div");A.classList.add("list-items");const l=document.querySelector(".app-main-footer");s.appendChild(A),t.appendChild(r),t.appendChild(s),n.insertBefore(t,l),e.todos.forEach((e=>{d(e)})),he.setLocalStorage()},d=n=>{const t=document.querySelector(".list-items"),r=document.createElement("div");r.classList.add("list-item"),r.dataset.id=n.id;const a=document.createElement("div");a.classList.add("list-item-box"),a.dataset.id=n.id;const o=document.createElement("div");o.classList.add("item-info"),o.dataset.id=n.id;const i=document.createElement("div");i.classList.add("item-name"),i.innerText=n.name,i.dataset.id=n.id;const s=document.createElement("div");if(s.classList.add("item-details"),s.dataset.id=n.id,n.dueDate){const e=document.createElement("div");e.classList.add("item-due-date"),e.innerText=ce.getDueDateShorthand(n),e.dataset.id=n.id,s.appendChild(e)}if(n.duration){const e=document.createElement("div");e.classList.add("item-duration"),e.innerText=n.duration,e.dataset.id=n.id,s.appendChild(e)}if(n.notes){const e=document.createElement("div");e.classList.add("item-notes"),e.innerText="Notes",e.dataset.id=n.id,e.addEventListener("mouseover",(function(e){A(e)})),e.addEventListener("mouseleave",(function(e){l(e)})),s.appendChild(e)}if(n.priority){const e=document.createElement("div");e.classList.add("item-priority"),e.innerText=`P${n.priority}`,e.dataset.id=n.id,1==n.priority?e.classList.add("priority-1"):2==n.priority?e.classList.add("priority-2"):3==n.priority&&e.classList.add("priority-3"),s.appendChild(e)}o.appendChild(i),s.hasChildNodes()&&o.appendChild(s),r.appendChild(a),r.appendChild(o),t.appendChild(r),1==n.completed&&r.classList.add("list-item-completed"),r.addEventListener("contextmenu",(function(e){c(e),e.preventDefault()}),!1),o.addEventListener("click",(function(n){null==document.querySelector(".add-area")&&(m(n.target).classList.add("hidden"),e("edit",m(n.target)))})),a.addEventListener("click",(function(e){ue.toggleCompleted(e.target.parentElement.dataset.id,he.getCurrentList())?a.parentElement.classList.add("list-item-completed"):a.parentElement.classList.remove("list-item-completed")}))},A=e=>{if(!document.querySelector(".notes-pop-up")){const n=document.createElement("div");n.classList.add("notes-pop-up"),document.querySelector(".list-items").appendChild(n);const t=e.target.parentElement.parentElement.parentElement.dataset.id;n.innerText=ue.getTaskFromId(t,he.getCurrentList()).notes;const r=e.target.getBoundingClientRect(),a=n.getBoundingClientRect(),o=r.left-a.width/2+r.width/2,i=r.top+1.5*r.height;n.style.top=`${i}px`,n.style.left=`${o}px`}},l=e=>{const n=document.querySelector(".notes-pop-up");n&&(n.classList.add("notes-pop-up-leave"),setTimeout((()=>{n.remove()}),200))},c=n=>{const t=document.querySelector(".context-menu");null!=t&&t.remove();let r=m(n.target);const a=document.createElement("div");a.classList.add("context-menu");const o=document.createElement("div");o.classList.add("context-menu-edit"),o.innerText="Edit";const i=document.createElement("div");i.classList.add("context-menu-delete"),i.innerText="Delete",o.addEventListener("click",(function(n){r.classList.add("hidden"),e("edit",r)})),i.addEventListener("click",(function(e){Ce.removeTask(r.dataset.id,he.getCurrentList()),a.remove()})),a.appendChild(o),a.appendChild(i),r.parentElement.appendChild(a),r.parentElement.getBoundingClientRect();const s=n.clientX,d=n.clientY;a.style.top=`${d}px`,a.style.left=`${s}px`,document.addEventListener("click",(function(e){e.target!=a&&a.remove()}))},u=e=>{const n=document.querySelector(".context-menu");null!=n&&n.remove();let r=e.target;const a=document.createElement("div");a.classList.add("context-menu");const i=document.createElement("div");i.classList.add("context-menu-edit"),i.innerText="Edit";const d=document.createElement("div");d.classList.add("context-menu-delete"),d.innerText="Delete",i.addEventListener("click",(function(e){t("edit",r),e.stopPropagation(),a.remove()})),d.addEventListener("click",(function(e){he.removeList(r.dataset.id),s(he.getCurrentList()),o(),a.remove()})),a.appendChild(i),a.appendChild(d),r.parentElement.appendChild(a),r.parentElement.getBoundingClientRect();const A=e.clientX,l=e.clientY;a.style.top=`${l}px`,a.style.left=`${A}px`,document.addEventListener("click",(function(e){e.target!=a&&a.remove()}))},m=e=>("list-item"!=e.classList[0]&&(e=e.parentElement),"list-item"!=e.classList[0]&&(e=e.parentElement),"list-item"!=e.classList[0]&&(e=e.parentElement),e);return{clearList:i,clearSidebar:a,displaySidebar:o,displayList:s,displayTask:d,makeAddArea:e}})(),he=(()=>{let e=0,n=null,t=[];const r=e=>t.findIndex((n=>{if(n.id==e)return!0})),a=e=>(n=t[r(e)],n);return{getLists:()=>t,getCurrentList:()=>n,setCurrentList:a,getListIndexFromId:r,addList:(n,r)=>{const o=((e,n,t)=>({name:e,description:n,id:t,todos:[]}))(n,r,e);return t.push(o),a(e),e++,o},removeList:e=>{const a=r(e),o=t.splice(a,1);n==o[0]&&(n=t[0])},setLocalStorage:()=>{localStorage.setItem("lists",JSON.stringify(t)),localStorage.setItem("currentList",JSON.stringify(n)),localStorage.setItem("listId",e),localStorage.setItem("taskId",Ce.getId())},getLocalStorage:()=>{t=JSON.parse(localStorage.getItem("lists")),a(JSON.parse(localStorage.getItem("currentList")).id),e=localStorage.getItem("listId"),Ce.setId(localStorage.getItem("taskId"))}}})();localStorage.getItem("lists")?he.getLocalStorage():(he.addList("Inbox"),Ce.addTask({name:"Add tasks with the + button or with [ Shift + N ]."},he.getCurrentList()),Ce.addTask({name:"Click on a task to edit its contents.",priority:"3",duration:"45min"},he.getCurrentList()),Ce.addTask({name:"You can right-click a task or a list to edit or delete it."},he.getCurrentList()),Ce.addTask({name:"Visit michaelbenzinger on GitHub",dueDate:new Date(Date.now()),notes:"Thanks for using my app. You'll find my other projects on GitHub.",priority:"1"},he.getCurrentList()),he.addList("New List","You can add a description for your list by right-clicking its title in the sidebar."),Ce.addTask({name:"Nothing to see here.",notes:"Nothing to see here, either."},he.getCurrentList()),he.setCurrentList(0)),pe.displayList(he.getCurrentList()),pe.displaySidebar()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,